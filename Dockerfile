# ================================
# Dockerfile pour Next.js 16
# Multi-stage build pour optimiser la taille
# Using Debian for better native module compatibility (lightningcss)
# ================================

# Stage 1: Builder (using full node image for better native module support)
FROM node:20 AS builder
WORKDIR /app

# Set environment variables BEFORE npm ci (needed for postinstall script)
# Use a placeholder DATABASE_URL for Prisma generation (not used during build, only at runtime)
ENV DATABASE_URL="postgresql://placeholder:placeholder@localhost:5432/placeholder?schema=public"
ENV NEXT_TELEMETRY_DISABLED=1

# Copy all application files (needed for Prisma schema before npm ci)
COPY . .

# Install all dependencies (including devDependencies) for build
# Using npm install instead of npm ci for better handling of optional dependencies like lightningcss
RUN npm install --legacy-peer-deps

# Debug: Check if lightningcss binaries are present
RUN ls -la node_modules/lightningcss/ || true
RUN find node_modules/lightningcss -name "*.node" || true

# Force download lightningcss platform-specific binary
RUN cd node_modules/lightningcss && npm run postinstall || true

# Build Next.js application (Prisma client already generated by postinstall)
RUN npm run build

# Stage 2: Runner (Production)
FROM node:20-slim AS runner
WORKDIR /app

ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

# Install runtime dependencies
RUN apt-get update && \
    apt-get install -y openssl && \
    rm -rf /var/lib/apt/lists/*

# Create a non-root user for security
RUN groupadd --system --gid 1001 nodejs
RUN useradd --system --uid 1001 --gid nodejs nextjs

# Copy necessary files from builder
COPY --from=builder /app/public ./public
COPY --from=builder /app/.next/standalone ./
COPY --from=builder /app/.next/static ./.next/static
COPY --from=builder /app/prisma ./prisma
COPY --from=builder /app/node_modules/.prisma ./node_modules/.prisma
COPY --from=builder /app/lib/generated ./lib/generated

# Set correct permissions
RUN chown -R nextjs:nodejs /app

USER nextjs

EXPOSE 3000

ENV PORT=3000
ENV HOSTNAME="0.0.0.0"

# Start the application
CMD ["node", "server.js"]
