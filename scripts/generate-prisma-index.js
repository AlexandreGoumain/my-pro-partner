#!/usr/bin/env node

/**
 * Generate index.ts for Prisma client
 * This script creates an index file that re-exports all types and enums
 * from the Prisma generated client for easier imports.
 */

const fs = require('fs');
const path = require('path');

const PRISMA_OUTPUT_DIR = path.join(__dirname, '..', 'lib', 'generated', 'prisma');
const INDEX_FILE = path.join(PRISMA_OUTPUT_DIR, 'index.ts');

const indexContent = `/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/*
* This file re-exports all types and enums from the Prisma schema.
* This is a convenience file to allow importing from '@/lib/generated/prisma'
*/

// Re-export the Prisma client
export * from './client';

// Re-export all enums
export * from './enums';

// Re-export all models
export * from './models';

// Re-export common input types
export * from './commonInputTypes';
`;

try {
  // Check if the Prisma output directory exists
  if (!fs.existsSync(PRISMA_OUTPUT_DIR)) {
    console.error(`Error: Prisma output directory not found at ${PRISMA_OUTPUT_DIR}`);
    console.error('Make sure to run "prisma generate" first.');
    process.exit(1);
  }

  // Write the index file
  fs.writeFileSync(INDEX_FILE, indexContent, 'utf8');
  console.log(`âœ“ Generated Prisma index file at ${INDEX_FILE}`);
} catch (error) {
  console.error('Error generating Prisma index file:', error);
  process.exit(1);
}
